// // Как задавать двухмерные массивы строчные
// string[,] table = new string[3, 5]; //Нумерация индексов тоже с нуля. [строки, столбцы]
// for (int i = 0; i < 3; i++) //3 колическтво строк
// {
//     for (int j = 0; j < 5; j++) //5 количество столбцов
//     {
//         Console.Write($"+ {table[i, j]} |"); //по умолчанию строки пустые, чтобы их было видно обрамила их слэшами
//     }
//     Console.WriteLine(); //переход на новую строку
// }
// // //----------------------------------------------------
// // двухмерные массивы числовые (матрицы)
// int[,] matrix = new int[4, 7];
// for (int i = 0; i < 4; i++)
// {
//     for (int j = 0; j < 7; j++)
//     {
//         Console.Write($" {matrix[i, j]} ");
//     }
//     Console.WriteLine();
// }

// //--------------------------------------------
// //как сослаться на длину массива
// int[,] matrix = new int[4, 7]; //тут задаем его размер числами
// for (int i = 0; i < matrix.GetLength(0); i++) //имя массива.GetLength(0) - по строкам
// {
//     for (int j = 0; j < matrix.GetLength(1); j++) //имя массива.GetLength(1) - по столбцам
//     {
//         Console.Write($" {matrix[i, j]} ");
//     }
//     Console.WriteLine();
// }

// //----------------------------------------------
// //Задаем метод, который будет печатать массив
// void PrintArray(int[,] matrix)
// {
//     for (int i = 0; i < matrix.GetLength(0); i++) //имя массива.GetLength(0) - по строкам
//     {
//         for (int j = 0; j < matrix.GetLength(1); j++) //имя массива.GetLength(1) - по столбцам
//         {
//             Console.Write($" {matrix[i, j]} ");
//         }
//         Console.WriteLine();
//     }
// }

// void FillArray(int[,] matrix)//задаем метод, которы будет заполнять массив случайными числами
// {
//     for (int i = 0; i < matrix.GetLength(0); i++) //имя массива.GetLength(0) - по строкам
//     {
//         for (int j = 0; j < matrix.GetLength(1); j++) //имя массива.GetLength(1) - по столбцам
//         {
//             matrix[i, j] = new Random().Next(1, 10);
//         }
//     }
// }

// int[,] matr = new int[4, 7]; //тут задаем новый массив и его размер
// PrintArray(matr); //вызываем метод (печатаем пустой массив)
// Console.WriteLine();//делаем отступ одну рпустую строку
// FillArray(matr); //заполняем массив случайными числами
// PrintArray(matr); //вызываем метод (печатаем получившийся массив)

// //----------------------------------------
// //Рисуем и закрашиваем картинку
// Console.Clear();
// int[,] pic = new int[,] //когда фиксированный массив (разверни строчки блонда!), который ввели в ручную, можно не указывать число строк и столбцов
// {
//     {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
//     {0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
//     {0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0},
//     {0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0},
//     {0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
//     {0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
//     {0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
//     {0,0,0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
//     {0,0,0,0,0,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
//     {0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0},
//     {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
//     {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
//     {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0},
//     {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
//     {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
//     {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0},
//     {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
//     {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
//     {0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0},
//     {0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
//     {0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
//     {0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0},
//     {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
// };

// void PrintImage(int[,] image) //Задаем метод, который будет печатать картинку в массиве pic
// {
//     for (int i = 0; i < image.GetLength(0); i++)
//     {
//         for (int j = 0; j < image.GetLength(1); j++)
//         {
//             if (image[i,j]==0) Console.Write("  "); //вместо ноликов два пробела
//             else Console.Write(" *"); //вместо единицы пробел и *
//         }
//         Console.WriteLine();
//     }
// }


// void FillImage(int row, int col) //метод, который будет закрашивать картинку. координаты с которых начать закраску row, col
// {
//     if (pic[row,col]==0)
//     {
//         pic[row,col]=1;
//         FillImage(row-1, col); //рекурсия (рекурентное соотношение)
//         FillImage(row, col-1);
//         FillImage(row+1, col);
//         FillImage(row, col+1);
//     }
// }

// PrintImage(pic);
// FillImage(13,13);
// PrintImage(pic);

// //-------------------------------------------------
// // Вычисляем факториал числа с помощью рекурсии
// Console.Clear();
// int Factorial(int n) //чтобы не выйти за объем типа данных, можно использовать double
// {
//     if (n == 1 || n == 0) return 1; //не забудь, что 1!=1, 0!=1
//     else return n * Factorial(n-1); //обращаемся к текущей же функции (рекурсия)
// }
// Console.WriteLine(Factorial(5));

// //-----------------------------------
// // Вычисляем факториал числа с помощью рекурсии и распечатываем таблицу
// Console.Clear();
// double Factorial(int n) //чтобы не выйти за объем типа данных, можно использовать double
// {
//     if (n == 1 || n == 0) return 1; //не забудь, что 1!=1, 0!=1
//     else return n * Factorial(n - 1); //обращаемся к текущей же функции (рекурсия)
// }

// Console.WriteLine("Enter a number: ");
// int n = Convert.ToInt32(Console.ReadLine());
// for (int i = 0; i <= n; i++)
// {
//     Console.WriteLine($"{i}! -> {Factorial(i)}");
// }

// //-------------------------------------------------------------------------------------
// //Числа фибоначи

// int Fibonachi(int n) //задаем метод
// {
//     if (n == 1 || n == 2) return 1;
//     else return Fibonachi(n - 1) + Fibonachi(n - 2);
// }

// for (int i = 1; i < 30; i++) // до 30, указываем в ручную
// {
//     Console.WriteLine(Fibonachi(i));
// }

// то же самое с запросом числа
int Fibonachi(int n) //задаем метод
{
    if (n == 1 || n == 2) return 1;
    else return Fibonachi(n - 1) + Fibonachi(n - 2);
}

Console.Clear();
Console.Write("Enter a number: ");
int num = Convert.ToInt32(Console.ReadLine());

for (int i = 1; i <= num; i++)
{
    Console.WriteLine(Fibonachi(i));
}
